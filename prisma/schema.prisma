generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  name        String
  email       String       @unique
  isAdmin     Boolean      @default(false)
  password    String
  id          Int          @id @default(autoincrement())
  orders      Order[]
  ingredients Ingredient[]
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String
  img         String?
  ingredients Ingredient[]
}

model Ingredient {
  id         Int                    @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category               @relation(fields: [categoryId], references: [id])
  recipes    IngredientsOnRecipes[]
  users      User[]
}

model Recipe {
  id          Int                    @id @default(autoincrement())
  name        String
  img         String?
  desc        String?
  price       Float
  step        String[]
  ingredients IngredientsOnRecipes[]
  Order       Order[]
}

model IngredientsOnRecipes {
  ingredientId Int
  recipeId     Int
  amount       Float
  measurement  String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])

  @@id([ingredientId, recipeId])
}

model Order {
  id         Int     @id @default(autoincrement())
  userId     Int
  user       User    @relation(fields: [userId], references: [id])
  foodId     Int
  food       Recipe  @relation(fields: [foodId], references: [id])
  totalPrice Float
  isPaid     Boolean @default(false)
}
