generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String
  img         String?
  ingredients Ingredient[]
}

model Ingredient {
  id         Int                    @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category               @relation(fields: [categoryId], references: [id])
  recipes    IngredientsOnRecipes[]
}

model Recipe {
  id          Int                    @id @default(autoincrement())
  name        String
  img         String?
  desc        String?
  step        String?
  ingredients IngredientsOnRecipes[]
  menus       Menu[]
}

model IngredientsOnRecipes {
  ingredientId Int
  recipeId     Int
  amount       Float
  measurement  String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])

  @@id([ingredientId, recipeId])
}

model Restaurant {
  id       Int     @id @default(autoincrement())
  name     String
  desc     String
  img      String?
  location String
  menus    Menu[]  @relation("MenuToRestaurant")
}

model Menu {
  id          Int          @id @default(autoincrement())
  name        String
  img         String?
  price       Float
  desc        String
  recipeId    Int?
  recipe      Recipe?      @relation(fields: [recipeId], references: [id])
  Order       Order[]
  restaurants Restaurant[] @relation("MenuToRestaurant")
}

model User {
  name     String
  email    String  @unique
  isAdmin  Boolean
  password String
  id       Int     @id @default(autoincrement())
  orders   Order[]
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int?
  totalPrice Float
  foodId     Int
  food       Menu     @relation(fields: [foodId], references: [id])
  user       User?    @relation(fields: [userId], references: [id])
  payment    Payment?
}

model Payment {
  id      Int     @id @default(autoincrement())
  orderId Int     @unique
  isPaid  Boolean @default(false)
  order   Order   @relation(fields: [orderId], references: [id])
}
