generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id          Int          @id @default(autoincrement())
  name        String
  img         String
  ingredients Ingredient[]
}

model Ingredient {
  id         Int                    @id @default(autoincrement())
  name       String
  categoryId Int
  category   Category               @relation(fields: [categoryId], references: [id])
  recipes    IngredientsOnRecipes[]

  @@index([categoryId])
}

model Recipe {
  id          Int                    @id @default(autoincrement())
  name        String
  img         String?
  desc        String?
  step        String?
  ingredients IngredientsOnRecipes[]
  menus       Menu[]
}

model IngredientsOnRecipes {
  ingredientId Int
  recipeId     Int
  amount       Float
  measurement  String
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  recipe       Recipe     @relation(fields: [recipeId], references: [id])

  @@id([ingredientId, recipeId])
  @@index([ingredientId])
  @@index([recipeId])
}

model Restaurant {
  id       Int     @id @default(autoincrement())
  name     String
  desc     String
  img      String?
  location String
  menus    Menu[]
}

model Menu {
  id          Int          @id @default(autoincrement())
  name        String
  img         String?
  price       Float
  desc        String
  recipeId    Int?
  recipe      Recipe?      @relation(fields: [recipeId], references: [id])
  restaurants Restaurant[]
  Order       Order[]

  @@index([recipeId])
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  isAdmin  Boolean
  orders   Order[]
}

model Order {
  id         Int      @id @default(autoincrement())
  userId     Int?
  totalPrice Float
  foodId     Int
  user       User?    @relation(fields: [userId], references: [id])
  payment    Payment?
  food       Menu     @relation(fields: [foodId], references: [id])

  @@index([userId])
  @@index([foodId])
}

model Payment {
  id      Int     @id @default(autoincrement())
  orderId Int     @unique
  isPaid  Boolean @default(false)
  order   Order   @relation(fields: [orderId], references: [id])
}

model MenuToRestaurant {
  A Int
  B Int

  @@unique([A, B], map: "_MenuToRestaurant_AB_unique")
  @@index([B], map: "_MenuToRestaurant_B_index")
  @@map("_MenuToRestaurant")
}
